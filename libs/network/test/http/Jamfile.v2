
# Copyright 2011 Dean Michael Berris.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import testing ;
import modules ;
import feature ;

project network_test/http :
    requirements
        <include>../../../../
        <include>../
        <variant>debug:<define>BOOST_NETWORK_DEBUG
    ;

run client_constructor_test.cpp /cpp-netlib//cppnetlib-uri /cpp-netlib//cppnetlib-client-connections ;
run client_get_test.cpp /cpp-netlib//cppnetlib-uri /cpp-netlib//cppnetlib-client-connections ;
run client_get_different_port_test.cpp /cpp-netlib//cppnetlib-uri /cpp-netlib//cppnetlib-client-connections ;
run client_get_timeout_test.cpp /cpp-netlib//cppnetlib-uri /cpp-netlib//cppnetlib-client-connections ;
#run client_include_inlined.cpp : <define>BOOST_NETWORK_NO_LIB ;
run client_localhost_normal_test.cpp /cpp-netlib//cppnetlib-uri /cpp-netlib//cppnetlib-client-connections ;
run client_localhost_ssl_test.cpp /cpp-netlib//cppnetlib-uri /cpp-netlib//cppnetlib-client-connections ;
run message_async_ready_test.cpp ;
run message_test.cpp /cpp-netlib//cppnetlib-uri ;
run request_incremental_parser_test.cpp ;
run request_linearize_test.cpp /cpp-netlib//cppnetlib-uri ;
run response_incremental_parser_test.cpp /cpp-netlib//cppnetlib-server-parsers ;
run server_constructor_test.cpp /cpp-netlib//cppnetlib-server-parsers ;
#run server_include_inlined.cpp : <define>BOOST_NETWORK_NO_LIB ;

exe http_async_server : server_async.cpp /cpp-netlib//cppnetlib-server-parsers ;
exe hello_world : server_hello_world.cpp /cpp-netlib//cppnetlib-server-parsers ;
exe http_async_less_copy_server : server_async_less_copy.cpp /cpp-netlib//cppnetlib-server-parsers ;
exe http_async_run_stop_concurrency_server : server_async_run_stop_concurrency.cpp /cpp-netlib//cppnetlib-server-parsers ;

make httplib_acceptance.passed : ../httplib_acceptance.py hello_world : @httplib_acceptance ;
make httplib_async_acceptance.passed : ../httplib_acceptance.py http_async_server : @httplib_acceptance ;
make httplib_async_less_copy_acceptance.passed : ../httplib_acceptance.py http_async_less_copy_server : @httplib_acceptance ;
make httplib_async_run_stop_concurrency_acceptance.passed : ../httplib_acceptance.py http_async_run_stop_concurrency_server : @httplib_acceptance ;

actions httplib_acceptance {
    export TEST_SCRIPT=`echo "$(>)" | awk '{print $1}'`
    export EXECUTABLE=`echo "$(>)" | awk '{print $2}'`
    export PORT=`echo "import random; print random.randint(8000, 8010)" | python`
    python $TEST_SCRIPT $EXECUTABLE $PORT $(<)
}

